import {
  Box,
  Card,
  CardBody,
  CardHeader,
  Heading,
  Input,
  useToast,
  Button,
  Image,
  AutoRenewIcon
} from '@pancakeswap/uikit'
import Link from 'next/link'
import { ChangeEvent, useState, useEffect } from 'react'
import styled from 'styled-components'
import { useTranslation } from '@pancakeswap/localization'
import Container from 'components/Layout/Container'
import { PageMeta } from 'components/Layout/Page'
import useDeployContract from './hook/contractController'
import {EXPLORER_LINK} from '../../config'
import { useActiveChainId } from 'hooks/useActiveChainId'

const ABI = `[
  {
      "inputs": [
          {
              "internalType": "string",
              "name": "_tokenName",
              "type": "string"
          },
          {
              "internalType": "string",
              "name": "_tokenSymbol",
              "type": "string"
          },
          {
              "internalType": "string",
              "name": "_baseUri",
              "type": "string"
          }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
  },
  {
      "anonymous": false,
      "inputs": [
          {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
          },
          {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
          },
          {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "Approval",
      "type": "event"
  },
  {
      "anonymous": false,
      "inputs": [
          {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
          },
          {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
          },
          {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
          }
      ],
      "name": "ApprovalForAll",
      "type": "event"
  },
  {
      "anonymous": false,
      "inputs": [
          {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
          },
          {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
          }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
  },
  {
      "anonymous": false,
      "inputs": [
          {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
          },
          {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
          },
          {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "Transfer",
      "type": "event"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "to",
              "type": "address"
          },
          {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "owner",
              "type": "address"
          }
      ],
      "name": "balanceOf",
      "outputs": [
          {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [],
      "name": "baseUri",
      "outputs": [
          {
              "internalType": "string",
              "name": "",
              "type": "string"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "getApproved",
      "outputs": [
          {
              "internalType": "address",
              "name": "",
              "type": "address"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "owner",
              "type": "address"
          },
          {
              "internalType": "address",
              "name": "operator",
              "type": "address"
          }
      ],
      "name": "isApprovedForAll",
      "outputs": [
          {
              "internalType": "bool",
              "name": "",
              "type": "bool"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [],
      "name": "name",
      "outputs": [
          {
              "internalType": "string",
              "name": "",
              "type": "string"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [],
      "name": "owner",
      "outputs": [
          {
              "internalType": "address",
              "name": "",
              "type": "address"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "ownerOf",
      "outputs": [
          {
              "internalType": "address",
              "name": "",
              "type": "address"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "to",
              "type": "address"
          }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "from",
              "type": "address"
          },
          {
              "internalType": "address",
              "name": "to",
              "type": "address"
          },
          {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "from",
              "type": "address"
          },
          {
              "internalType": "address",
              "name": "to",
              "type": "address"
          },
          {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          },
          {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
          }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "operator",
              "type": "address"
          },
          {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
          }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "string",
              "name": "_baseUri",
              "type": "string"
          }
      ],
      "name": "setBaseUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
          }
      ],
      "name": "supportsInterface",
      "outputs": [
          {
              "internalType": "bool",
              "name": "",
              "type": "bool"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [],
      "name": "symbol",
      "outputs": [
          {
              "internalType": "string",
              "name": "",
              "type": "string"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "tokenURI",
      "outputs": [
          {
              "internalType": "string",
              "name": "",
              "type": "string"
          }
      ],
      "stateMutability": "view",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "from",
              "type": "address"
          },
          {
              "internalType": "address",
              "name": "to",
              "type": "address"
          },
          {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
          }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  },
  {
      "inputs": [
          {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
          }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
  }
]`

const BYTE_CODE = "60806040523480156200001157600080fd5b506040516200340f3803806200340f8339818101604052810190620000379190620002fb565b828281600090816200004a9190620005ff565b5080600190816200005c9190620005ff565b5050506200007f620000736200009a60201b60201c565b620000a260201b60201c565b8060079081620000909190620005ff565b50505050620006e6565b600033905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d18262000186565b810181811067ffffffffffffffff82111715620001f357620001f262000197565b5b80604052505050565b60006200020862000168565b9050620002168282620001c6565b919050565b600067ffffffffffffffff82111562000239576200023862000197565b5b620002448262000186565b9050602081019050919050565b60005b838110156200027157808201518184015260208101905062000254565b60008484015250505050565b6000620002946200028e846200021b565b620001fc565b905082815260208101848484011115620002b357620002b262000181565b5b620002c084828562000251565b509392505050565b600082601f830112620002e057620002df6200017c565b5b8151620002f28482602086016200027d565b91505092915050565b60008060006060848603121562000317576200031662000172565b5b600084015167ffffffffffffffff81111562000338576200033762000177565b5b6200034686828701620002c8565b935050602084015167ffffffffffffffff8111156200036a576200036962000177565b5b6200037886828701620002c8565b925050604084015167ffffffffffffffff8111156200039c576200039b62000177565b5b620003aa86828701620002c8565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040757607f821691505b6020821081036200041d576200041c620003bf565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000448565b62000493868362000448565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004e0620004da620004d484620004ab565b620004b5565b620004ab565b9050919050565b6000819050919050565b620004fc83620004bf565b620005146200050b82620004e7565b84845462000455565b825550505050565b600090565b6200052b6200051c565b62000538818484620004f1565b505050565b5b8181101562000560576200055460008262000521565b6001810190506200053e565b5050565b601f821115620005af57620005798162000423565b620005848462000438565b8101602085101562000594578190505b620005ac620005a38562000438565b8301826200053d565b50505b505050565b600082821c905092915050565b6000620005d460001984600802620005b4565b1980831691505092915050565b6000620005ef8383620005c1565b9150826002028217905092915050565b6200060a82620003b4565b67ffffffffffffffff81111562000626576200062562000197565b5b620006328254620003ee565b6200063f82828562000564565b600060209050601f83116001811462000677576000841562000662578287015190505b6200066e8582620005e1565b865550620006de565b601f198416620006878662000423565b60005b82811015620006b1578489015182556001820191506020850194506020810190506200068a565b86831015620006d15784890151620006cd601f891682620005c1565b8355505b6001600288020188555050505b505050505050565b612d1980620006f66000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a22cb46511610071578063a22cb465146102f4578063b88d4fde14610310578063c87b56dd1461032c578063e985e9c51461035c578063f2fde38b1461038c57610121565b8063715018a6146102745780638da5cb5b1461027e57806395d89b411461029c5780639abc8320146102ba578063a0bcfc7f146102d857610121565b806323b872dd116100f457806323b872dd146101c057806340d097c3146101dc57806342842e0e146101f85780636352211e1461021457806370a082311461024457610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611a73565b6103a8565b60405161014d9190611abb565b60405180910390f35b61015e61048a565b60405161016b9190611b66565b60405180910390f35b61018e60048036038101906101899190611bbe565b61051c565b60405161019b9190611c2c565b60405180910390f35b6101be60048036038101906101b99190611c73565b610562565b005b6101da60048036038101906101d59190611cb3565b610679565b005b6101f660048036038101906101f19190611d06565b6106d9565b005b610212600480360381019061020d9190611cb3565b610707565b005b61022e60048036038101906102299190611bbe565b610727565b60405161023b9190611c2c565b60405180910390f35b61025e60048036038101906102599190611d06565b6107d8565b60405161026b9190611d42565b60405180910390f35b61027c61088f565b005b6102866108a3565b6040516102939190611c2c565b60405180910390f35b6102a46108cd565b6040516102b19190611b66565b60405180910390f35b6102c261095f565b6040516102cf9190611b66565b60405180910390f35b6102f260048036038101906102ed9190611dc2565b6109ed565b005b61030e60048036038101906103099190611e3b565b610a0b565b005b61032a60048036038101906103259190611fab565b610a21565b005b61034660048036038101906103419190611bbe565b610a83565b6040516103539190611b66565b60405180910390f35b6103766004803603810190610371919061202e565b610aeb565b6040516103839190611abb565b60405180910390f35b6103a660048036038101906103a19190611d06565b610b7f565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610483575061048282610c02565b5b9050919050565b6060600080546104999061209d565b80601f01602080910402602001604051908101604052809291908181526020018280546104c59061209d565b80156105125780601f106104e757610100808354040283529160200191610512565b820191906000526020600020905b8154815290600101906020018083116104f557829003601f168201915b5050505050905090565b600061052782610c6c565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061056d82610727565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490612140565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105fc610cb7565b73ffffffffffffffffffffffffffffffffffffffff16148061062b575061062a81610625610cb7565b610aeb565b5b61066a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610661906121d2565b60405180910390fd5b6106748383610cbf565b505050565b61068a610684610cb7565b82610d78565b6106c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c090612264565b60405180910390fd5b6106d4838383610e0d565b505050565b6106e1611073565b60006106ed60086110f1565b90506106f960086110ff565b6107038282611115565b5050565b61072283838360405180602001604052806000815250610a21565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c6906122d0565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90612362565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610897611073565b6108a16000611133565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108dc9061209d565b80601f01602080910402602001604051908101604052809291908181526020018280546109089061209d565b80156109555780601f1061092a57610100808354040283529160200191610955565b820191906000526020600020905b81548152906001019060200180831161093857829003601f168201915b5050505050905090565b6007805461096c9061209d565b80601f01602080910402602001604051908101604052809291908181526020018280546109989061209d565b80156109e55780601f106109ba576101008083540402835291602001916109e5565b820191906000526020600020905b8154815290600101906020018083116109c857829003601f168201915b505050505081565b6109f5611073565b818160079182610a06929190612539565b505050565b610a1d610a16610cb7565b83836111f9565b5050565b610a32610a2c610cb7565b83610d78565b610a71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6890612264565b60405180910390fd5b610a7d84848484611365565b50505050565b6060610a8e82610c6c565b6000610a986113c1565b90506000815111610ab85760405180602001604052806000815250610ae3565b80610ac284611453565b604051602001610ad3929190612645565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610b87611073565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bed906126db565b60405180910390fd5b610bff81611133565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c75816115b3565b610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab906122d0565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610d3283610727565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d8483610727565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610dc65750610dc58185610aeb565b5b80610e0457508373ffffffffffffffffffffffffffffffffffffffff16610dec8461051c565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e2d82610727565b73ffffffffffffffffffffffffffffffffffffffff1614610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7a9061276d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee9906127ff565b60405180910390fd5b610efd83838361161f565b610f08600082610cbf565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f58919061284e565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610faf9190612882565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461106e838383611624565b505050565b61107b610cb7565b73ffffffffffffffffffffffffffffffffffffffff166110996108a3565b73ffffffffffffffffffffffffffffffffffffffff16146110ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e690612902565b60405180910390fd5b565b600081600001549050919050565b6001816000016000828254019250508190555050565b61112f828260405180602001604052806000815250611629565b5050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125e9061296e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113589190611abb565b60405180910390a3505050565b611370848484610e0d565b61137c84848484611684565b6113bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b290612a00565b60405180910390fd5b50505050565b6060600780546113d09061209d565b80601f01602080910402602001604051908101604052809291908181526020018280546113fc9061209d565b80156114495780601f1061141e57610100808354040283529160200191611449565b820191906000526020600020905b81548152906001019060200180831161142c57829003601f168201915b5050505050905090565b60606000820361149a576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506115ae565b600082905060005b600082146114cc5780806114b590612a20565b915050600a826114c59190612a97565b91506114a2565b60008167ffffffffffffffff8111156114e8576114e7611e80565b5b6040519080825280601f01601f19166020018201604052801561151a5781602001600182028036833780820191505090505b5090505b600085146115a757600182611533919061284e565b9150600a856115429190612ac8565b603061154e9190612882565b60f81b81838151811061156457611563612af9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856115a09190612a97565b945061151e565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b611633838361180b565b6116406000848484611684565b61167f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167690612a00565b60405180910390fd5b505050565b60006116a58473ffffffffffffffffffffffffffffffffffffffff166119e4565b156117fe578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116ce610cb7565b8786866040518563ffffffff1660e01b81526004016116f09493929190612b7d565b6020604051808303816000875af192505050801561172c57506040513d601f19601f820116820180604052508101906117299190612bde565b60015b6117ae573d806000811461175c576040519150601f19603f3d011682016040523d82523d6000602084013e611761565b606091505b5060008151036117a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179d90612a00565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611803565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361187a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187190612c57565b60405180910390fd5b611883816115b3565b156118c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ba90612cc3565b60405180910390fd5b6118cf6000838361161f565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461191f9190612882565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119e060008383611624565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a5081611a1b565b8114611a5b57600080fd5b50565b600081359050611a6d81611a47565b92915050565b600060208284031215611a8957611a88611a11565b5b6000611a9784828501611a5e565b91505092915050565b60008115159050919050565b611ab581611aa0565b82525050565b6000602082019050611ad06000830184611aac565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b10578082015181840152602081019050611af5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b3882611ad6565b611b428185611ae1565b9350611b52818560208601611af2565b611b5b81611b1c565b840191505092915050565b60006020820190508181036000830152611b808184611b2d565b905092915050565b6000819050919050565b611b9b81611b88565b8114611ba657600080fd5b50565b600081359050611bb881611b92565b92915050565b600060208284031215611bd457611bd3611a11565b5b6000611be284828501611ba9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c1682611beb565b9050919050565b611c2681611c0b565b82525050565b6000602082019050611c416000830184611c1d565b92915050565b611c5081611c0b565b8114611c5b57600080fd5b50565b600081359050611c6d81611c47565b92915050565b60008060408385031215611c8a57611c89611a11565b5b6000611c9885828601611c5e565b9250506020611ca985828601611ba9565b9150509250929050565b600080600060608486031215611ccc57611ccb611a11565b5b6000611cda86828701611c5e565b9350506020611ceb86828701611c5e565b9250506040611cfc86828701611ba9565b9150509250925092565b600060208284031215611d1c57611d1b611a11565b5b6000611d2a84828501611c5e565b91505092915050565b611d3c81611b88565b82525050565b6000602082019050611d576000830184611d33565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611d8257611d81611d5d565b5b8235905067ffffffffffffffff811115611d9f57611d9e611d62565b5b602083019150836001820283011115611dbb57611dba611d67565b5b9250929050565b60008060208385031215611dd957611dd8611a11565b5b600083013567ffffffffffffffff811115611df757611df6611a16565b5b611e0385828601611d6c565b92509250509250929050565b611e1881611aa0565b8114611e2357600080fd5b50565b600081359050611e3581611e0f565b92915050565b60008060408385031215611e5257611e51611a11565b5b6000611e6085828601611c5e565b9250506020611e7185828601611e26565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611eb882611b1c565b810181811067ffffffffffffffff82111715611ed757611ed6611e80565b5b80604052505050565b6000611eea611a07565b9050611ef68282611eaf565b919050565b600067ffffffffffffffff821115611f1657611f15611e80565b5b611f1f82611b1c565b9050602081019050919050565b82818337600083830152505050565b6000611f4e611f4984611efb565b611ee0565b905082815260208101848484011115611f6a57611f69611e7b565b5b611f75848285611f2c565b509392505050565b600082601f830112611f9257611f91611d5d565b5b8135611fa2848260208601611f3b565b91505092915050565b60008060008060808587031215611fc557611fc4611a11565b5b6000611fd387828801611c5e565b9450506020611fe487828801611c5e565b9350506040611ff587828801611ba9565b925050606085013567ffffffffffffffff81111561201657612015611a16565b5b61202287828801611f7d565b91505092959194509250565b6000806040838503121561204557612044611a11565b5b600061205385828601611c5e565b925050602061206485828601611c5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120b557607f821691505b6020821081036120c8576120c761206e565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061212a602183611ae1565b9150612135826120ce565b604082019050919050565b600060208201905081810360008301526121598161211d565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b60006121bc603e83611ae1565b91506121c782612160565b604082019050919050565b600060208201905081810360008301526121eb816121af565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b600061224e602e83611ae1565b9150612259826121f2565b604082019050919050565b6000602082019050818103600083015261227d81612241565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006122ba601883611ae1565b91506122c582612284565b602082019050919050565b600060208201905081810360008301526122e9816122ad565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b600061234c602983611ae1565b9150612357826122f0565b604082019050919050565b6000602082019050818103600083015261237b8161233f565b9050919050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026123ef7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826123b2565b6123f986836123b2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061243661243161242c84611b88565b612411565b611b88565b9050919050565b6000819050919050565b6124508361241b565b61246461245c8261243d565b8484546123bf565b825550505050565b600090565b61247961246c565b612484818484612447565b505050565b5b818110156124a85761249d600082612471565b60018101905061248a565b5050565b601f8211156124ed576124be8161238d565b6124c7846123a2565b810160208510156124d6578190505b6124ea6124e2856123a2565b830182612489565b50505b505050565b600082821c905092915050565b6000612510600019846008026124f2565b1980831691505092915050565b600061252983836124ff565b9150826002028217905092915050565b6125438383612382565b67ffffffffffffffff81111561255c5761255b611e80565b5b612566825461209d565b6125718282856124ac565b6000601f8311600181146125a0576000841561258e578287013590505b612598858261251d565b865550612600565b601f1984166125ae8661238d565b60005b828110156125d6578489013582556001820191506020850194506020810190506125b1565b868310156125f357848901356125ef601f8916826124ff565b8355505b6001600288020188555050505b50505050505050565b600081905092915050565b600061261f82611ad6565b6126298185612609565b9350612639818560208601611af2565b80840191505092915050565b60006126518285612614565b915061265d8284612614565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006126c5602683611ae1565b91506126d082612669565b604082019050919050565b600060208201905081810360008301526126f4816126b8565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612757602583611ae1565b9150612762826126fb565b604082019050919050565b600060208201905081810360008301526127868161274a565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006127e9602483611ae1565b91506127f48261278d565b604082019050919050565b60006020820190508181036000830152612818816127dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061285982611b88565b915061286483611b88565b925082820390508181111561287c5761287b61281f565b5b92915050565b600061288d82611b88565b915061289883611b88565b92508282019050808211156128b0576128af61281f565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128ec602083611ae1565b91506128f7826128b6565b602082019050919050565b6000602082019050818103600083015261291b816128df565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612958601983611ae1565b915061296382612922565b602082019050919050565b600060208201905081810360008301526129878161294b565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006129ea603283611ae1565b91506129f58261298e565b604082019050919050565b60006020820190508181036000830152612a19816129dd565b9050919050565b6000612a2b82611b88565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a5d57612a5c61281f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612aa282611b88565b9150612aad83611b88565b925082612abd57612abc612a68565b5b828204905092915050565b6000612ad382611b88565b9150612ade83611b88565b925082612aee57612aed612a68565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000612b4f82612b28565b612b598185612b33565b9350612b69818560208601611af2565b612b7281611b1c565b840191505092915050565b6000608082019050612b926000830187611c1d565b612b9f6020830186611c1d565b612bac6040830185611d33565b8181036060830152612bbe8184612b44565b905095945050505050565b600081519050612bd881611a47565b92915050565b600060208284031215612bf457612bf3611a11565b5b6000612c0284828501612bc9565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612c41602083611ae1565b9150612c4c82612c0b565b602082019050919050565b60006020820190508181036000830152612c7081612c34565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612cad601c83611ae1565b9150612cb882612c77565b602082019050919050565b60006020820190508181036000830152612cdc81612ca0565b905091905056fea26469706673582212202b097587967f763f1f6d6d2547322d3f84e275ee5928f9c83d124d8e3923af9664736f6c63430008110033"

const spinnerIcon = <AutoRenewIcon spin color="currentColor" />

const BaseLabel = styled.label`
  color: ${({ theme }) => theme.colors.text};
  display: block;
  font-weight: 600;
  margin-bottom: 8px;
`

export const SecondaryLabel = styled(BaseLabel)`
  font-size: 12px;
  text-transform: uppercase;
`

export const Label = styled(BaseLabel)`
  font-size: 20px;
`

const Layout = styled.div`
  align-items: start;
  display: grid;
  grid-gap: 32px;
  grid-template-columns: minmax(0, 1fr);
  ${({ theme }) => theme.mediaQueries.lg} {
    grid-template-columns: auto;
  }
`
export interface FormState {
  tokenName: string
  tokenSymbol: string
  baseUri: string
}

const Home = () => {

  const [state, setState] = useState<FormState>(() => ({
    tokenName: 'My Spirit',
    tokenSymbol: 'MSP',
    baseUri: 'https://dev-960406489632890.api.raw-labs.com/nft?id=',
  }))

  const { chainId } = useActiveChainId();
  const [isLoading, setIsLoading] = useState(false)
  const { t } = useTranslation()
  const { toastSuccess, toastError, toastInfo } = useToast()
  const { tokenName, tokenSymbol, baseUri } = state
  const [data, setData] = useState({abi:'[]', bytecode: ''})

  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {
    const { name: inputName, value } = evt.currentTarget
    console.log(inputName, value);
    
    setState((prevState) => ({
      ...prevState,
      [inputName]: value,
    }))
  }

  const {address, isDeploy, deploy } = useDeployContract(ABI, BYTE_CODE, tokenName, tokenSymbol, baseUri)

  const compileContract = () => {

    setIsLoading(true)

    const myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");

    const raw = JSON.stringify({
      "tokenName": tokenName,
      "tokenSymbol": tokenSymbol,
      "baseUri": baseUri
    });

    const requestOptions : RequestInit = {
      method: 'POST',
      headers: myHeaders,
      body: raw,
      redirect: 'follow'
    };

    fetch("/api/createERC721Contract", requestOptions)
      .then(response => response.json())
      .then(result => {        
        console.log(result["ERC721Tokenabi"]);
        
        setData({abi: result["ERC721Tokenabi"], bytecode: BYTE_CODE})
        setIsLoading(false)
        toastSuccess("Success", "Compile contract success")
      })
      .catch(error => {
        setIsLoading(false)
        console.log(error);
        toastError("Error", "Compile contract failed")
      });
  }


  const verifyContract = () => {
    
    var requestOptions : RequestInit = { method: 'GET', redirect: 'follow'};

    fetch("/api/verifyContract?contractAddress=" + address, requestOptions)
      .then(response => response.json())
      .then(result => console.log(result))
      .catch(error => console.log('error', error));
  }

  return (
    <Container py="40px">
      <PageMeta />
      {/* <form> */}
        <Layout>
          <Box>
            <Card>
              <CardHeader>
                <Heading as="h3" scale="md">
                  {t('Create NFT (ERC721 token)')}
                </Heading>
              </CardHeader>
              <CardBody>
                <Box mb="24px">
                  <SecondaryLabel>{t('Token name')}</SecondaryLabel>
                  <Input id="tokenName" name="tokenName" value={tokenName} scale="lg" onChange={handleChange} required />
                </Box>
                <Box mb="24px">
                  <SecondaryLabel>{t('Token Symbol')}</SecondaryLabel>
                  <Input id="tokenSymbol" name="tokenSymbol" value={tokenSymbol} scale="lg" onChange={handleChange} required />
                </Box>
                <Box mb="24px">
                  <SecondaryLabel>{t('Base URI')}</SecondaryLabel>
                  <Input id="baseUri" name="baseUri" value={baseUri} scale="lg" onChange={handleChange} required />
                </Box>
                <Box mb="24px">
                  <SecondaryLabel>{t('NFT(ERC721) review')}</SecondaryLabel>
                  <SecondaryLabel>{tokenName + ' (' + tokenSymbol + ')'}</SecondaryLabel>
                  <SecondaryLabel>{'Base Uri: ' + baseUri}</SecondaryLabel>
                  <Image src="https://cdn.pancakeswap.com/wallets/wallet_intro.png" width={198} height={178} />
                  {
                    address && <Link href={EXPLORER_LINK[chainId] + address}>
                    Contract address
                  </Link>
                  }
                </Box>
                <Box mb="24px">
                  {/* <Button  
                    onClick={compileContract}
                    endIcon={isLoading ? spinnerIcon : undefined}
                    isLoading={isLoading}>Compile smart contract</Button> */}
                  {
                    (data.bytecode.length > 10 || BYTE_CODE.length) > 10 && 
                      <Button 
                      onClick={deploy}
                      endIcon={isDeploy ? spinnerIcon : undefined}
                      isLoading={isDeploy}>Create NFT</Button>
                  
                  }
                  {/* {
                    address && <Button onClick={verifyContract}>Verify contract</Button>
                  } */}
                </Box>
                </CardBody>
            </Card>
          </Box>
          
        </Layout>
      {/* </form> */}
    </Container>
  )
}

export default Home